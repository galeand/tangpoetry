plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'com.sse'
version = '2.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    runtimeOnly 'mysql:mysql-connector-java'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.1.2.RELEASE'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'

    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    
    
    // https://mvnrepository.com/artifact/com.alibaba.boot/dubbo-spring-boot-starter
//    compile group: 'com.alibaba.boot', name: 'dubbo-spring-boot-starter', version: '0.1.0'
// https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient
//    compile group: 'com.github.sgroschupf', name: 'zkclient', version: '0.1'
}

dependencyManagement {
    imports {
        //启用云服务好像必须导入这一句啊
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
//清除上次的编译过的文件
task clearPj(type: Delete) {

    delete 'build', 'target'

}

task copyJar(type: Copy) {

    from configurations.runtime

    into('build/libs/lib')

}

//把JAR复制到目标目录

task release(type: Copy, dependsOn: [build, copyJar]) {

// from 'conf'

// into ('build/libs/eachend/conf') // 目标位置

} 



